@model SignInSignUp.Models.Asset
@{
    ViewBag.Title = "Edit";
}


<!DOCTYPE html>
<html>
<head>
    <script src="https://kit.fontawesome.com/b4f739a393.js" crossorigin="anonymous"></script>
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .main_container {
            margin: 0 15px;
            text-align: center;
        }

        td {
            text-align: left;
        }

        .lebels {
            font-weight: bold;
        }

        .custom-table td {
            padding: 5px;
            border: none !important; /* Remove borders from all table cells and give it higher priority */
        }

        .table-parent {
            padding: 20px 0 15px 40px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: row;
        }

        .form-group {
            margin-bottom: 13px;
        }

        .information {
            font-weight: bold;
            background-color: #F6F1FF;
            color: black;
            text-align: left;
            padding: 15px 0 10px 15px;
            box-shadow: 0px -10px 20px rgba(0, 0, 0, 0.1), 0px 10px 20px rgba(0, 0, 0, 0.1), -5px 0px 10px rgba(0, 0, 0, 0.1), 5px 0px 10px rgba(0, 0, 0, 0.1);
        }

            .information p {
                margin-bottom: 0;
            }
    </style>
</head>

<body style="background-color: #F8F3FF ">
    @using (Html.BeginForm("Edit", "Assets", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.AssetId)

        <div class="main_container">
            <h2 class=" mb-2 mt-3">Edit Asset Details</h2>

            <div class="top-button">
                <a class="btn btn-secondary" href="@Url.Action("Index", "Assets")" role="button">Back To List</a>
            </div>

            <div class="information">
                <p>Basic Info</p>
            </div>

            <div class="table-parent">
                <div style="flex:1">
                    <table class="table custom-table">
                        <tr>
                            <td>
                                <div class="form-group lebels">
                                    @Html.LabelFor(model => model.AssetName)
                                </div>
                            </td>
                            <td style="padding-left: 3em;">
                                <div>
                                    @Html.TextBoxFor(model => model.AssetName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group lebels">
                                    @Html.LabelFor(model => model.ProductCategory)
                                </div>
                            </td>
                            <td style="padding-left: 3em;">
                                <div>
                                    @Html.DropDownListFor(model => model.ProductCategory, new SelectList(Model.ProductCategories), "Select Product Category", new { @class = "form-control", id = "productCategoryDropdown" })
                                    @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group lebels">
                                    <div>
                                        @Html.LabelFor(model => model.ProductId)
                                    </div>
                                </div>
                            </td>
                            <td style="padding-left: 3em;">
                                <div>
                                    @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.Products, "ProductId", "ProductName"), "Select Product", new { @class = "form-control", id = "productDropdown" })
                                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="flex:1">
                    <table class="table custom-table">
                        <tr>
                            <td style="width: 24%">
                                <div class="form-group lebels">
                                    @Html.LabelFor(model => model.SerialNumber)
                                </div>
                            </td>
                            <td style="padding-left: 0.5em;">
                                <div>
                                    @Html.TextBoxFor(model => model.SerialNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td style="width: 24%">
                                <div class="form-group lebels">
                                    @Html.LabelFor(model => model.Description)
                                </div>
                            </td>
                            <td style="padding-left: 0.5em; ">
                                <div>
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <br />

            <div class="information">
                <p>Additional Info</p>
            </div>

            <div class="table-parent">
                <div style="flex:1">
                    <table class="table custom-table">
                        <tr>
                            <td>
                                <div class="lebels form-group">
                                    Vendor
                                </div>
                            </td>
                            <td style="padding-left: 3em;" class="form-group">
                                <div>
                                    @Html.DropDownListFor(model => model.VendorId, new SelectList(Model.Vendors, "VendorId", "VendorName"), "Select Vendor", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VendorId)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="lebels">
                                    @Html.LabelFor(model => model.InvoiceFile)
                                </div>
                            </td>
                            <td style="padding-left: 3em;">
                                <input type="file" name="NewInvoiceFile" id="newInvoiceFile" class="form-control" />
                            </td>
                        </tr>

                    </table>
                </div>

                <div style="flex:1">
                    <table class="table custom-table">
                        <tr>
                            <td>
                                <div class="lebels form-group">
                                    @Html.LabelFor(model => model.Price)
                                </div>
                            </td>
                            <td style="padding-left: 3em;" class="form-group">
                                <div>
                                    @Html.TextAreaFor(model => model.Price, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Price)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="lebels">
                                    @Html.LabelFor(model => model.InvoiceFile)
                                </div>
                            </td>
                            <td style="padding-left: 3em;">
                                @if (!string.IsNullOrEmpty(Model.InvoiceFilePath))
                                {
                                    <a href="@Url.Action("DownloadInvoice", "Assets", new { fileName = Model.InvoiceFilePath })">Download Invoice</a>
                                }
                                else
                                {
                                    <p>No invoice file uploaded.</p>
                                }
                            </td>
                        </tr>

                    </table>
                </div>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Update</button>
        </div>
    }
</body>

</html>
<script>
    $(document).ready(function () {
        $('#productCategoryDropdown').change(function () {
            var category = $(this).val();
            var productDropdown = $('#productDropdown');

            $.ajax({
                url: '@Url.Action("GetProductsByCategory", "Assets")',
                type: 'GET',
                data: { category: category },
                success: function (data) {
                    productDropdown.empty();

                    if (data.length > 0) {
                        $.each(data, function (index, item) {
                            productDropdown.append($('<option></option>').val(item.ProductId).text(item.ProductName));
                        });
                    }
                    else {
                        productDropdown.append($('<option></option>').text('No Products'));
                    }
                }
            });
        });
    });
</script>
